import * as _ from 'lamb';
import {isIterableEmpty} from '@svizzle/utils';
import {stopWords} from 'utils/stopwords';

export const getSuggestionsQuery = (field, term) => ({
	size: 0,
	query: {
		term: {
			[field]: term
		}
	},
	aggs: {
		[field]: {
			significant_text: {
				field,
				// TODO include/exclude according to ES version
				include: stopWords,
				min_doc_count: 1,
				size: 20
			}
		}
	}
});

export const makeGetSuggestionsBy = searchQuery => _.pipe([
	_.filterWith(sugg => sugg.key !== searchQuery),
	_.sortWith([
		_.sorterDesc(_.getKey('doc_count')),
		_.getKey('key')
	]),
	_.mapWith(sugg => `${sugg.key} (${sugg.doc_count})`),
	_.when(isIterableEmpty, _.always(['-- no suggestions found --']))
]);
