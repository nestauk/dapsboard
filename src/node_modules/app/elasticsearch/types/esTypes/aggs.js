import {
	calendarInterval,
	fixedInterval,
	genericInterval,
	optional,
	sortOptions,
} from 'app/elasticsearch/types/esTypes/params';
import {
	_type,
	booleanD,
	enumsOf,
	extentOf,
	integerD,
	numberOrString,
	objectOf,
	string,
	stringD,
	xorOf,
} from 'app/elasticsearch/types/genericTypes';

export const baseAggFor = fieldType => ({
	field: string,
	missing: optional(numberOrString(fieldType))
});

export const dateHistogramAggFor = fieldType => objectOf({
	...baseAggFor(fieldType),
	__intervals: xorOf({
		interval: genericInterval,
		calendar_interval: calendarInterval,
		fixed_interval: fixedInterval
	}),
	min_doc_count: optional(integerD(1, true)),
	order: optional(sortOptions),
	time_zone: stringD('UTC'),
});

export const histogramAggFor = fieldType => objectOf({
	...baseAggFor(fieldType),
	extended_bounds: optional(extentOf(_type(fieldType)())),
	interval: _type(fieldType)(),
	keyed: optional(booleanD(false)),
	min_doc_count: optional(integerD(1, true)),
	offset: optional(_type(fieldType)(0)),
	order: optional(sortOptions),
});

export const termsAggFor = fieldType => objectOf({
	...baseAggFor(fieldType),
	/*
	* Per ES below, `breadth_first` is the default mode for fields with a cardinality
	* bigger than the requested size or when the cardinality is unknown
	* (numeric fields or scripts for instance).
	*/
	collect_mode: enumsOf(['depth_first', 'breadth_first'], 'depth_first'),
	/*
	* Per ES below, `global_ordinals` is the default option for keyword field, it uses
	* global ordinals to allocate buckets dynamically so memory usage is linear to the
	* number of values of the documents that are part of the aggregation scope.
	*/
	execution_hint: enumsOf(['global_ordinals', 'map'], 'global_ordinals'),
	order: optional(sortOptions),
	size: integerD(10),
});
