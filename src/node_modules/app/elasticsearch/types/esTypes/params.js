import {mergeObj} from '@svizzle/utils';

import {
	_shape,
	enumsOf,
	intWithUnitOf,
	objectOf,
	xorOf,
} from 'app/elasticsearch/types/genericTypes';

// conditions

export const optionalKey = '__optional';
export const optional = mergeObj({[optionalKey]: true});

/* common */

export const sortOptions = objectOf({
	__orderBy: xorOf({
		_count: optional(enumsOf(['asc', 'desc'], 'desc')),
		_key: optional(enumsOf(['asc', 'desc'], 'asc')),
	})
});

/* dimensional types */

export const fixedInterval = intWithUnitOf(['ms', 's', 'm', 'h', 'd'], 'd');
export const calendarInterval = intWithUnitOf(['m', 'h', 'd', 'w', 'M', 'w', 'q', 'y'], 'y');
export const genericInterval = intWithUnitOf(['ms', 's', 'm', 'h', 'd', 'w', 'M', 'q', 'y'], 'y');

/* other */

export const scriptD = _shape('script');
export const script = scriptD();
