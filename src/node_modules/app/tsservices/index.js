import { createServicesHost } from './serviceshost';
import LIBDTS from './lib.d.ts';

function getTS () {
	return window.ts;
}

const FILENAME = 'source.ts';
export function getCompletions (
	source,
	position
) {
	const ts = getTS();
	const host = createServicesHost(ts, {[FILENAME]: source}, LIBDTS);
	const service = ts.createLanguageService(host, ts.createDocumentRegistry());
	const completions = service.getCompletionsAtPosition(FILENAME, position, {});
	return completions && completions.entries.map(completionData => {
		const details = service.getCompletionEntryDetails(
			FILENAME,
			position,
			completionData.name
		);
		return {
			name: completionData.name,
			required: details.displayParts[5].text !== '?',
			displayText:
				details.displayParts.slice(7)
				.map(part => part.text)
				.join('')
				.trim(),
			documentation: details.documentation
		};
	})
}
