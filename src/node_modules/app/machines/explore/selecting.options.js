import * as _ from 'lamb';
import {stringify, toggleItem} from '@svizzle/utils';
import {get} from 'svelte/store';
import {actions, assign} from 'xstate';

const {log} = actions;

const selectFields = (ctx, {fields}) => {
	ctx.selectedFields.set(fields);
	return ctx;
}

const toggleField = (ctx, {field}) => {
	ctx.selectedFields.update(fields => toggleItem(fields, field));
	return ctx;
}

const selectNextField = ctx => {
	ctx.selectedFields.update(_.setAt(-1, get(ctx.nextPair)[0]));
	return ctx;
}

const selectPreviousField = ctx => {
	ctx.selectedFields.update(_.setAt(-1, get(ctx.prevPair)[0]));
	return ctx;
}

export const selectingOptions = {
	actions: {
		logState: log(
			(context, event) => `event: ${stringify(event)}, context: ${stringify(context)}`,
			'logState'
		),
		selectFields: assign(selectFields),
		toggleField: assign(toggleField),
		selectNextField: assign(selectNextField),
		selectPreviousField: assign(selectPreviousField),
	},
	guards: {
	}
};
