// eslint-disable-next-line node/no-unpublished-import
import { assign, send } from 'xstate';

function setTab (ctx, event) {
	ctx.selectedRequestTab.set(event.selectedRequestTab);
	return ctx
}

function setTypings (ctx, event) {
	ctx.datasetTypings = event.datasetTypings;
	return ctx
}

function setDataset (ctx, event) {
	ctx.dataset.set(event.dataset);
	return ctx
}

function setResultSize (ctx, event) {
	ctx.resultSize.set(event.resultSize);
	return ctx
}

const toggle = v => !v;

export const formEditingOptions = {
	actions: {
		/**
		 * Sets the dataset during page loading and reloading.
		 */
		setDataset: assign(setDataset),
		/**
		 * Sets the result size during page loading and reloading.
		 */
		setResultSize: assign(setResultSize),
		/**
		 * Selects the editor tab.
		 */
		setTab: assign(setTab),
		/**
		 * Sets the dataset typings during page loading.
		 */
		setTypings: assign(setTypings),
		setParsing: assign({isParsing: true}),
		setParsingDone: assign({isParsing: false}),
		sendEdited: send('EDITED'),
		/**
		 * Toggles auto-executing requests when the query is valid
		 */
		toggleAutoExecute: ctx => ctx.runQueryOnSelect.update(toggle),
		/**
		 * Hide unselectable axes. Default: true
		 */
		toggleHideDisabledForms: ctx => ctx.hideDisabledForms.update(toggle),
		/**
		 * Hide unselectable aggregations. Default: false
		 */
		toggleHideDisabledAggs: ctx => ctx.hideDisabledAggregations.update(toggle),
		/**
		 * Hide unselectable datasets. Default: false
		 */
		toggleHideDisabledDatasets: ctx => ctx.hideDisabledDatasets.update(toggle),
		/**
		 * Hide unselectable fields. Default: true
		 */
		toggleHideDisabledFields: ctx => ctx.hideDisabledFields.update(toggle),
		/**
		 * Show full response or only aggregation results.
		 */
		toggleShowFullResponse: ctx => ctx.showFullResponse.update(toggle),
	},
	guards: {
	}
};
