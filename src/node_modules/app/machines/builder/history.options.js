// eslint-disable-next-line node/no-unpublished-import
import rison from 'rison-esm';

function collectConfiguration (ctx) {
	const name = ctx.dataset;
	return {}
}

function updateEntry (ctx, event) {
	const query = rison.encode(collectConfiguration(ctx));
	const url = `${window.location.pathname}?q=${query}`;
	const updateType = event.init ? 'pushState' : 'replaceState';
	history[updateType](null, window.title, url);
}

export const historyOptions = {
	actions: {
		/**
		 * When editing starts reserves a history slot for the session
		 */
		initEntry: ctx => updateEntry(ctx, {init: true}),
		/**
		 * Updates the history slot on edits
		 */
		updateEntry,
		/**
		 * When edditing is completed, close the editing session
		 */
		commitEntry: () => undefined,
	},
	guards: {
	}
};
